/*
 * This file is generated by jOOQ.
 */
package com.reactive.recommendation.database.jooq


import com.reactive.recommendation.database.jooq.tables.Accounts
import com.reactive.recommendation.database.jooq.tables.FlywaySchemaHistory
import com.reactive.recommendation.database.jooq.tables.Transactions
import com.reactive.recommendation.database.jooq.tables.Users

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.accounts</code>.
     */
    val ACCOUNTS: Accounts get() = Accounts.ACCOUNTS

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY: FlywaySchemaHistory get() = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>public.transactions</code>.
     */
    val TRANSACTIONS: Transactions get() = Transactions.TRANSACTIONS

    /**
     * The table <code>public.users</code>.
     */
    val USERS: Users get() = Users.USERS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Accounts.ACCOUNTS,
        FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
        Transactions.TRANSACTIONS,
        Users.USERS
    )
}
