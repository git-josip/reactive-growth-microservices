version: '3.8'

services:
  postgres-reactive:
    container_name: postgres-reactive
    image: postgres:16-alpine
    ports:
      - "7432:5432"
    environment:
      - "POSTGRES_DB=product"
      - "POSTGRES_USERNAME=postgres"
      - "POSTGRES_PASSWORD=strongpassword"
    volumes:
      - ./docker-compose-init/postgres:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - reactive-network

  product:
    container_name: product
    build: product-service
    depends_on:
      - postgres-reactive
      - kafka-reactive
      - zipkin-reactive
      - logstash-reactive
    ports:
      - "7771:7771"
      - "7071:7071"
      - "7001:7001"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - R2DBC_URL=r2dbc:postgresql://postgres-reactive:5432/product
      - JDBC_URL=jdbc:postgresql://postgres-reactive:5432/product
      - DB_USERNAME=postgres
      - DB_PASSWORD=strongpassword
      - KAFKA_BOOTSTRAP_SERVERS=kafka-reactive:9092
      - ZIPKIN_BASE_URL=http://zipkin-reactive:9411
      - LOGSTASH_HOST=logstash-reactive
      - LOGSTASH_PORT=5044
    networks:
      - reactive-network

  inventory:
    container_name: inventory
    build: inventory-service
    depends_on:
      - postgres-reactive
      - kafka-reactive
      - zipkin-reactive
    ports:
      - "7002:7002"
      - "7772:7772"
      - "7072:7072"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - R2DBC_URL=r2dbc:postgresql://postgres-reactive:5432/inventory
      - JDBC_URL=jdbc:postgresql://postgres-reactive:5432/inventory
      - DB_USERNAME=postgres
      - DB_PASSWORD=strongpassword
      - KAFKA_BOOTSTRAP_SERVERS=kafka-reactive:9092
      - ZIPKIN_BASE_URL=http://zipkin-reactive:9411
      - LOGSTASH_HOST=logstash-reactive
      - LOGSTASH_PORT=5044
    networks:
      - reactive-network

  order:
    container_name: order
    build: order-service
    depends_on:
      - postgres-reactive
      - kafka-reactive
      - zipkin-reactive
      - logstash-reactive
    ports:
      - "7003:7003"
      - "7773:7773"
      - "7073:7073"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - R2DBC_URL=r2dbc:postgresql://postgres-reactive:5432/orders
      - JDBC_URL=jdbc:postgresql://postgres-reactive:5432/orders
      - DB_USERNAME=postgres
      - DB_PASSWORD=strongpassword
      - KAFKA_BOOTSTRAP_SERVERS=kafka-reactive:9092
      - ZIPKIN_BASE_URL=http://zipkin-reactive:9411
      - LOGSTASH_HOST=logstash-reactive
      - LOGSTASH_PORT=5044
    networks:
      - reactive-network

  api-gateway:
    container_name: api-gateway
    build: armeria-api-gateway
    depends_on:
      - product
      - zipkin-reactive
      - logstash-reactive
    ports:
      - "5555:5555"
    environment:
      - PRODUCT_SERVICE_GRPC_HOST=product
      - PRODUCT_SERVICE_GRPC_PORT=7071
    networks:
      - reactive-network

  zookeeper-reactive:
    container_name: zookeeper-reactive
    image: confluentinc/cp-zookeeper:7.7.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - reactive-network

  kafka-reactive:
    container_name: kafka-reactive
    image: confluentinc/cp-kafka:7.7.1
    depends_on:
      - zookeeper-reactive
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-reactive:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-reactive:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - reactive-network

  kafka-ui-reactive:
    container_name: kafka-ui-reactive
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka-reactive
    ports:
      - "8888:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-reactive:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - reactive-network

  prometheus-reactive:
    image: prom/prometheus
    volumes:
      - "./docker-compose-init/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./docker-compose-init/prometheus/rules.yml:/etc/prometheus/rules.yml"
    networks:
      - reactive-network
    ports:
      - 9090:9090

  grafana-reactive:
    image: grafana/grafana
    networks:
      - reactive-network
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./docker-compose-init/grafana/:/etc/grafana/provisioning/datasources

  node-exporter:
    image: prom/node-exporter
    networks:
      - reactive-network
    ports:
      - 9100:9100

  alert-manager:
    image: prom/alertmanager
    networks:
      - reactive-network
    ports:
      - 9093:9093

  zipkin-reactive:
    image: openzipkin/zipkin:3.4.2
    container_name: zipkin
    networks:
      - reactive-network
    ports:
      - "9411:9411"

  elasticsearch-reactive:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    container_name: elasticsearch-reactive
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - reactive-network

  logstash-reactive:
    image: docker.elastic.co/logstash/logstash:8.16.1
    container_name: logstash-reactive
    environment:
      - "LS_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./docker-compose-init/logstash:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch-reactive
    networks:
      - reactive-network

  kibana-reactive:
    image: docker.elastic.co/kibana/kibana:8.16.1
    container_name: kibana-reactive
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch-reactive
    networks:
      - reactive-network

volumes:
  esdata:
    driver: local

networks:
  reactive-network:
    driver: bridge