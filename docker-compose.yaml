version: '3.8'

services:
  postgres-reactive:
    container_name: postgres-reactive
    image: postgres:16-alpine
    ports:
      - "7432:5432"
    environment:
      - "POSTGRES_DB=product"
      - "POSTGRES_USERNAME=postgres"
      - "POSTGRES_PASSWORD=strongpassword"
    volumes:
      - ./docker-compose-init/postgres:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - reactive-network

  product:
    container_name: product
    build: product-service
    depends_on:
      - postgres-reactive
      - kafka-reactive
    ports:
      - "7071:7071"
      - "7001:7001"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - R2DBC_URL=r2dbc:postgresql://postgres-reactive:5432/product
      - JDBC_URL=jdbc:postgresql://postgres-reactive:5432/product
      - DB_USERNAME=postgres
      - DB_PASSWORD=strongpassword
      - KAFKA_BOOTSTRAP_SERVERS=kafka-reactive:9092
    networks:
      - reactive-network

  inventory:
    container_name: inventory
    build: inventory-service
    depends_on:
      - postgres-reactive
      - kafka-reactive
    ports:
      - "7002:7002"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - R2DBC_URL=r2dbc:postgresql://postgres-reactive:5432/inventory
      - JDBC_URL=jdbc:postgresql://postgres-reactive:5432/inventory
      - DB_USERNAME=postgres
      - DB_PASSWORD=strongpassword
      - KAFKA_BOOTSTRAP_SERVERS=kafka-reactive:9092
    networks:
      - reactive-network

  order:
    container_name: order
    build: order-service
    depends_on:
      - postgres-reactive
      - kafka-reactive
    ports:
      - "7003:7003"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - R2DBC_URL=r2dbc:postgresql://postgres-reactive:5432/orders
      - JDBC_URL=jdbc:postgresql://postgres-reactive:5432/orders
      - DB_USERNAME=postgres
      - DB_PASSWORD=strongpassword
      - KAFKA_BOOTSTRAP_SERVERS=kafka-reactive:9092
    networks:
      - reactive-network

  api-gateway:
    container_name: api-gateway
    build: armeria-api-gateway
    depends_on:
      - product
    ports:
      - "5555:5555"
    environment:
      - PRODUCT_SERVICE_GRPC_HOST=product
      - PRODUCT_SERVICE_GRPC_PORT=7071
    networks:
      - reactive-network

  zookeeper-reactive:
    container_name: zookeeper-reactive
    image: confluentinc/cp-zookeeper:7.7.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - reactive-network

  kafka-reactive:
    container_name: kafka-reactive
    image: confluentinc/cp-kafka:7.7.1
    depends_on:
      - zookeeper-reactive
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-reactive:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-reactive:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - reactive-network

  kafka-ui-reactive:
    container_name: kafka-ui-reactive
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka-reactive
    ports:
      - "8888:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-reactive:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - reactive-network

networks:
  reactive-network:
    driver: bridge