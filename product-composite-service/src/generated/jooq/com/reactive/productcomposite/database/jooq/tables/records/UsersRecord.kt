/*
 * This file is generated by jOOQ.
 */
package com.reactive.productcomposite.database.jooq.tables.records


import com.reactive.productcomposite.database.jooq.tables.Users

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersRecord private constructor() : UpdatableRecordImpl<UsersRecord>(Users.USERS) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var username: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var password: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var createdAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(id: Long? = null, username: String, password: String, createdAt: LocalDateTime? = null): this() {
        this.id = id
        this.username = username
        this.password = password
        this.createdAt = createdAt
        resetChangedOnNotNull()
    }
}
