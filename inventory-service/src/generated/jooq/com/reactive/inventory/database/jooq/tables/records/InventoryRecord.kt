/*
 * This file is generated by jOOQ.
 */
package com.reactive.inventory.database.jooq.tables.records


import com.reactive.inventory.database.jooq.tables.Inventory

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InventoryRecord private constructor() : UpdatableRecordImpl<InventoryRecord>(Inventory.INVENTORY) {

    open var productId: Long
        set(value): Unit = set(0, value)
        get(): Long = get(0) as Long

    open var quantity: Int
        set(value): Unit = set(1, value)
        get(): Int = get(1) as Int

    open var createdAt: LocalDateTime?
        set(value): Unit = set(2, value)
        get(): LocalDateTime? = get(2) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised InventoryRecord
     */
    constructor(productId: Long, quantity: Int, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.productId = productId
        this.quantity = quantity
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetChangedOnNotNull()
    }
}
